{
    "glossario": [
      {
        "term": "Stack TCP-IP",
        "description": "Lo <strong>stack TCP/IP</strong> è un modello di riferimento utilizzato per descrivere il funzionamento della comunicazione in rete, come su Internet. È suddiviso in quattro livelli principali, ognuno con compiti specifici che cooperano per garantire il trasferimento dei dati tra dispositivi: <ul><li><strong>Livello Applicazione</strong>: Include protocolli come HTTP, FTP, e SMTP per permettere agli utenti di interagire con la rete.</li><li><strong>Livello Trasporto</strong>: Garantisce la trasmissione affidabile dei dati tramite TCP (affidabile) o UDP (più rapido ma meno sicuro).</li><li><strong>Livello Internet</strong>: Gestisce l'instradamento dei pacchetti con il protocollo IP per identificare i dispositivi sulla rete.</li><li><strong>Livello Accesso Rete</strong>: Si occupa della trasmissione fisica dei dati tramite tecnologie come Ethernet o Wi-Fi.</li></ul>"
      },
      {
        "term": "Socket",
        "description": "Un <strong>socket</strong> è un'interfaccia software che consente la comunicazione tra due applicazioni, sia sulla stessa macchina che su dispositivi diversi in una rete. I socket sono fondamentali per il funzionamento dei protocolli di rete come TCP e UDP, e rappresentano i punti finali di una connessione di rete. I principali aspetti del socket includono: <ul><li><strong>Connessione TCP</strong>: Il socket crea una connessione affidabile tra client e server, garantendo che i dati siano ricevuti nell'ordine corretto.</li><li><strong>Connessione UDP</strong>: Il socket invia pacchetti senza stabilire una connessione, risultando più veloce ma meno sicuro.</li><li><strong>Interazione Client-Server</strong>: Viene utilizzato per la comunicazione tra client (es. browser web) e server (es. server web).</li></ul>"
      },
      {
        "term": "Server",
        "description": "Un <strong>server</strong> è un dispositivo o un programma che fornisce servizi o risorse a un altro dispositivo, chiamato <strong>client</strong>, attraverso una rete. I server sono progettati per gestire richieste provenienti da molti client e rispondere con i dati o le risorse richieste. Alcuni tipi comuni di server includono: <ul><li><strong>Server Web</strong>: Fornisce pagine web e altri contenuti ai browser web dei client tramite il protocollo HTTP.</li><li><strong>Server di Database</strong>: Gestisce e fornisce l'accesso a grandi volumi di dati tramite query SQL.</li><li><strong>File Server</strong>: Memorizza e gestisce file, consentendo ai client di scaricare, caricare o modificare i file tramite la rete.</li></ul>"
      },
      {
        "term": "Client",
        "description": "Un <strong>client</strong> è un dispositivo o un programma che accede ai servizi o alle risorse fornite da un <strong>server</strong> tramite una rete. I client inviano richieste al server e ricevono risposte in base alle loro necessità. I client possono essere di diversi tipi, tra cui: <ul><li><strong>Client Web</strong>: Un browser che richiede pagine web e risorse da un server web tramite HTTP.</li><li><strong>Client di Posta Elettronica</strong>: Un'applicazione che invia e riceve email tramite server di posta come SMTP o IMAP.</li><li><strong>Client FTP</strong>: Un programma che permette il trasferimento di file tra il client e un server FTP.</li></ul>"
      },
      {
        "term": "Pila ISO/OSI",
        "description": "La <strong>Pila ISO/OSI</strong> (International Standards Organization/Open Systems Interconnection) è un modello di riferimento utilizzato per comprendere e descrivere come avviene la comunicazione tra dispositivi su una rete. È composta da sette livelli distinti, ognuno dei quali ha una funzione specifica nel processo di comunicazione. I sette livelli della pila ISO/OSI sono: <ul><li><strong>Livello 1 - Fisico</strong>: Gestisce la trasmissione di segnali fisici sulla rete, come cavi e segnali elettrici.</li><li><strong>Livello 2 - Collegamento Dati</strong>: Si occupa della trasmissione sicura dei dati tra dispositivi direttamente connessi, utilizzando tecniche come l'indirizzamento MAC.</li><li><strong>Livello 3 - Rete</strong>: Gestisce l'instradamento dei dati attraverso diverse reti, utilizzando indirizzi IP e protocolli come il routing.</li><li><strong>Livello 4 - Trasporto</strong>: Garantisce che i dati arrivino correttamente dal mittente al destinatario, utilizzando protocolli come TCP o UDP.</li><li><strong>Livello 5 - Sessione</strong>: Gestisce la comunicazione tra due dispositivi, mantenendo la connessione attiva durante tutta la sessione.</li><li><strong>Livello 6 - Presentazione</strong>: Si occupa della formattazione dei dati, per esempio codificando o decodificando informazioni tra formati diversi.</li><li><strong>Livello 7 - Applicazione</strong>: Questo è il livello più vicino all'utente e include le applicazioni e i protocolli utilizzati per l'interazione diretta con la rete, come HTTP, FTP, SMTP.</li></ul>"
      },
      {
        "title": "TCP (Transmission Control Protocol)",
        "content": "Il TCP (Transmission Control Protocol) è un protocollo di trasporto affidabile e orientato alla connessione. È uno dei principali protocolli utilizzati per la trasmissione di dati su Internet. TCP garantisce che i dati vengano consegnati correttamente e nell'ordine giusto tra il mittente e il destinatario. La comunicazione in TCP avviene attraverso un processo di handshake (scambio di pacchetti di sincronizzazione) per stabilire una connessione prima che i dati vengano effettivamente inviati. In caso di perdita di pacchetti, TCP provvede al loro recupero attraverso meccanismi di ritrasmissione. È utilizzato in applicazioni dove l'affidabilità è fondamentale, come la navigazione web (HTTP), l'invio di email (SMTP) e il trasferimento di file (FTP)."
      },
      {
        "title": "UDP (User Datagram Protocol)",
        "content": "L'UDP (User Datagram Protocol) è un protocollo di trasporto senza connessione e non affidabile. A differenza del TCP, UDP non garantisce la consegna dei dati, né l'ordine in cui vengono ricevuti. Viene utilizzato per applicazioni che richiedono una trasmissione rapida dei dati, come lo streaming video, i giochi online e la telefonia VoIP, dove la velocità di trasmissione è più importante della completezza e dell'ordine dei dati. UDP invia i dati in pacchetti chiamati 'datagrammi', ma non stabilisce una connessione tra il mittente e il destinatario, il che lo rende più veloce ma meno sicuro rispetto a TCP."
      },
      {
        "title": "Porta",
        "content": "Una porta è un punto di accesso logico attraverso il quale un computer o un altro dispositivo può inviare e ricevere dati in una rete. Le porte sono numerate e permettono di distinguere tra diversi tipi di traffico che transitano su una rete. Ogni servizio di rete, come un server web (HTTP) o un server di posta elettronica (SMTP), opera su una porta specifica. Ad esempio, la porta 80 è utilizzata per il traffico HTTP, mentre la porta 443 è utilizzata per HTTPS (HTTP sicuro). Le porte possono essere di due tipi: <ul><li><strong>Porte Well-Known</strong>: numeri da 0 a 1023, utilizzate per i principali servizi di rete.</li><li><strong>Porte Registrate</strong>: numeri da 1024 a 49151, usate da applicazioni e servizi specifici.</li></ul> Le porte sono una parte essenziale del modello di comunicazione basato su TCP/IP."
      },
      {
        "title": "HTTP (HyperText Transfer Protocol)",
        "content": "HTTP (HyperText Transfer Protocol) è un protocollo di comunicazione utilizzato per il trasferimento di dati su internet. È il fondamento di ogni interazione tra client e server nel World Wide Web. HTTP è un protocollo stateless, cioè non mantiene alcuna informazione tra le richieste successive, il che significa che ogni richiesta HTTP è indipendente dalle precedenti. <br><br> Una tipica interazione HTTP implica che il client (ad esempio, un browser web) invii una richiesta al server per recuperare una risorsa (come una pagina web o un'immagine). Il server, quindi, risponde con i dati richiesti. HTTP funziona utilizzando il modello client-server e opera sulla porta 80 di default. <br><br> Esistono due versioni principali di HTTP: <ul><li><strong>HTTP/1.1</strong>: La versione più utilizzata di HTTP, che ha introdotto diverse ottimizzazioni rispetto alla versione precedente.</li><li><strong>HTTP/2</strong>: Una versione più recente che migliora le performance rispetto a HTTP/1.1, supportando il multiplexing delle richieste e una maggiore efficienza nella gestione delle connessioni.</li></ul>"
      },
      {
        "title": "MAC Address (Media Access Control Address)",
        "content": "Un MAC Address (Media Access Control Address) è un identificatore univoco assegnato a un dispositivo di rete per l'accesso a una rete di comunicazione. Si tratta di un indirizzo a livello di collegamento dati che viene utilizzato per indirizzare i pacchetti tra dispositivi nella rete locale (LAN). <br><br> I MAC address sono assegnati dai produttori di schede di rete (NIC - Network Interface Card) e sono generalmente incorporati nel dispositivo stesso. Un MAC Address è composto da 48 bit, espressi come 12 caratteri esadecimali, ed è generalmente scritto in sei coppie di caratteri separati da due punti o trattini (ad esempio, 00:1A:2B:3C:4D:5E). <br><br> I MAC address vengono utilizzati per la comunicazione all'interno di una rete locale (LAN) e non sono visibili o utilizzabili su Internet. Tuttavia, sono fondamentali per il corretto funzionamento dei protocolli di rete, come Ethernet e Wi-Fi. Un altro concetto importante legato ai MAC address è il 'filtraggio MAC', che viene utilizzato nelle reti Wi-Fi per limitare l'accesso solo ai dispositivi con indirizzi MAC autorizzati."
      },
      {
        "title": "Indirizzo IP (Internet Protocol Address)",
        "content": "Un indirizzo IP (Internet Protocol Address) è un identificatore univoco assegnato a ciascun dispositivo connesso a una rete che utilizza il protocollo Internet (IP). Questo indirizzo consente ai dispositivi di comunicare tra loro all'interno della rete o attraverso Internet. <br><br> Esistono due versioni principali di indirizzi IP: <ul><li><strong>IPv4</strong>: Il formato più comune, che utilizza indirizzi a 32 bit, scritti come quattro gruppi di numeri decimali separati da punti (ad esempio, 192.168.1.1). Con IPv4, ci sono circa 4 miliardi di indirizzi disponibili, ma a causa dell'esaurimento degli indirizzi, sono stati sviluppati nuovi standard.</li><li><strong>IPv6</strong>: Una versione più recente, che utilizza indirizzi a 128 bit, scritti come otto gruppi di quattro caratteri esadecimali separati da due punti (ad esempio, 2001:0db8:85a3:0000:0000:8a2e:0370:7334). IPv6 è stato introdotto per risolvere il problema dell'esaurimento degli indirizzi IPv4 e offre un numero significativamente maggiore di indirizzi.</li></ul> Gli indirizzi IP possono essere classificati in due categorie: <ul><li><strong>Indirizzi IP pubblici</strong>: Unici su Internet, utilizzati per identificare dispositivi che devono essere accessibili da altre reti, come i server web.</li><li><strong>Indirizzi IP privati</strong>: Utilizzati all'interno di reti locali (LAN) e non sono visibili direttamente su Internet. Questi indirizzi appartengono a determinati intervalli definiti dallo standard, come 192.168.x.x o 10.x.x.x.</li></ul> L'assegnazione degli indirizzi IP è gestita da enti come l'IANA (Internet Assigned Numbers Authority) e gli ISP (Internet Service Providers) che allocano gli indirizzi ai loro clienti."
      },
      {
        "title": "Database",
        "content": "Un <strong>database</strong> è un sistema organizzato per raccogliere, gestire e archiviare dati in modo strutturato, così che possano essere facilmente recuperati, modificati e gestiti. I database vengono utilizzati in una vasta gamma di applicazioni, come la gestione di dati aziendali, la registrazione di transazioni e l'archiviazione di informazioni in vari settori, tra cui sanità, commercio elettronico e social media. <br><br> Esistono due tipi principali di database: <ul><li><strong>Database relazionali (RDBMS)</strong>: Questi database organizzano i dati in tabelle interconnesse tramite relazioni. Le informazioni sono strutturate in righe e colonne, e i dati possono essere facilmente interrogati utilizzando il linguaggio SQL (Structured Query Language). Esempi di database relazionali sono MySQL, PostgreSQL, Microsoft SQL Server e Oracle.</li><li><strong>Database NoSQL</strong>: Questi database sono progettati per gestire grandi quantità di dati non strutturati o semi-strutturati. A differenza dei database relazionali, non utilizzano tabelle con righe e colonne fisse. I database NoSQL sono spesso usati per applicazioni che richiedono alta scalabilità e velocità di accesso ai dati. Esempi di database NoSQL sono MongoDB, Cassandra e Redis.</li></ul> I database possono essere ospitati su server locali (on-premise) o su cloud, offrendo vantaggi come la scalabilità, la sicurezza dei dati e l'accesso remoto. La gestione di un database implica operazioni come l'inserimento, la modifica, l'eliminazione e la consultazione dei dati, tutte realizzate tramite query."
      }
    ]
  }
  